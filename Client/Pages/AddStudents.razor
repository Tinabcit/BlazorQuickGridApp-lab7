@page "/addstudent"
@using BlazorQuickGridApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Add New Student</h3>

<EditForm Model="newStudent" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" class="form-control" @bind-Value="newStudent.Name" />
    </div>

    <div class="form-group">
        <label for="Age">Age</label>
        <InputNumber id="Age" class="form-control" @bind-Value="newStudent.Age" />
    </div>

    <div class="form-group">
        <label for="Grade">Grade</label>
        <InputText id="Grade" class="form-control" @bind-Value="newStudent.Grade" />
    </div>

    <button type="submit" class="btn btn-primary">Add Student</button>
</EditForm>

@if (isSuccess)
{
    <p class="alert alert-success mt-3">Student added successfully!</p>
}

@if (errorMessage != null)
{
    <p class="alert alert-danger mt-3">Error: @errorMessage</p>
}

@code {
    private StudentViewModel newStudent = new StudentViewModel();
    private bool isSuccess = false;
    private string errorMessage = null;

    private async Task HandleSubmit()
    {
        try
        {
            // POST request to add student
            var response = await Http.PostAsJsonAsync("http://localhost:5123/api/student", newStudent);

            if (response.IsSuccessStatusCode)
            {
                isSuccess = true;
                newStudent = new StudentViewModel(); // Reset the form
                errorMessage = null;

                // Navigate to the student list page and force a reload
                Navigation.NavigateTo("/students", forceLoad: true);
            }
            else
            {
                isSuccess = false;
                errorMessage = "Failed to add student.";
            }
        }
        catch (Exception ex)
        {
            isSuccess = false;
            errorMessage = ex.Message;
        }
    }
}
